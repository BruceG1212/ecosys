use graph Healthcare
drop query removeInvalidEdgeInBatch

create distributed query removeInvalidEdgeInBatch(string srcVType, string tgtVType, string edgeType, string rEdgeType, bool dryrun = true, int total = 4, int num = 0) for Graph Healthcare {
 SumAccum<int> @@edgeCount = 0;
 SetAccum<VERTEX> @@tgtSet;
 SetAccum<VERTEX> @@activeTgtSet;
 SetAccum<VERTEX> @@tgtDiffSet;

 SumAccum<int> @@rEdgeCount = 0;
 SetAccum<VERTEX> @@srcSet;
 SetAccum<VERTEX> @@activeSrcSet;
 SetAccum<VERTEX> @@srcDiffSet;

 S = {srcVType.*};
 S = SELECT src 
     FROM S: src
     WHERE vertex_to_int(src) % str_to_int(total) == str_to_int(num);  

 S1 = SELECT src
     FROM S:src - (edgeType: e) - tgtVType:tgt 
     ACCUM 
       @@tgtSet += getTgtVid(e),
       @@edgeCount += 1
     POST-ACCUM 
       @@activeTgtSet += tgt
     ; 
 //find the diff 
 @@tgtDiffSet = @@tgtSet MINUS @@activeTgtSet;
 
 PRINT @@edgeCount, S.size(), S1.size(), @@tgtSet.size(), @@activeTgtSet.size(), @@tgtDiffSet.size();
 @@tgtSet.clear();
 @@activeTgtSet.clear();

 TDiff = {@@tgtDiffSet};

 PRINT TDiff.size();

 CASE WHEN (NOT dryrun) AND (TDiff.size() == 0) THEN
   PRINT RemoveVertexByIIDSet(__ENGINE__SERVICEAPI, __ENGINE__REQUEST, tgtVType, @@tgtDiffSet);
 END;
	

 T = {tgtVType.*};
 T = SELECT src 
     FROM T: src
     WHERE vertex_to_int(src) % str_to_int(total) == str_to_int(num);

 T1 = SELECT src
     FROM T:src - (rEdgeType: e) - srcVType:tgt
     ACCUM 
       @@srcSet += getTgtVid(e),
       @@rEdgeCount += 1
     POST-ACCUM
       @@activeSrcSet += tgt
     ;
 //find the diff 
 @@srcDiffSet = @@srcSet MINUS @@activeSrcSet;
 
 PRINT @@rEdgeCount, T.size(), T1.size(), @@srcSet.size(), @@activeSrcSet.size(), @@srcDiffSet.size();
 @@srcSet.clear();
 @@activeSrcSet.clear();

 SDiff = {@@srcDiffSet};
 PRINT SDiff.size();

 CASE WHEN (NOT dryrun) AND (SDiff.size() == 0) THEN
   PRINT RemoveVertexByIIDSet(__ENGINE__SERVICEAPI, __ENGINE__REQUEST, srcVType, @@srcDiffSet);
 END;

}

install query removeInvalidEdgeInBatch
