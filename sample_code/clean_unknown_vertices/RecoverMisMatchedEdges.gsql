USE graph Healthcare
DROP QUERY RecoverMisMatchedEdges
CREATE DISTRIBUTED QUERY RecoverMisMatchedEdges(string srcVType, string tgtVType, string edgeType, string rEdgeType, bool dryrun = true) FOR GRAPH Healthcare {
   ListAccum<int> @EdgeTgtSet;
   ListAccum<int> @rEdgeTgtSet;

   SumAccum<int> @@NoDirectEdgeCnt;
   SumAccum<int> @@NoReverseEdgeCnt;

   PRINT srcVType, tgtVType, edgeType, rEdgeType, dryrun;

   S = { srcVType.* };

   T1 = SELECT tgt
       FROM S:src -(edgeType:e)-> tgtVType:tgt
       ACCUM src.@EdgeTgtSet += vertex_to_int(getTgtVid(e))
   ;


   T = { tgtVType.* };
   S1 = SELECT tgt
       FROM T:src -(rEdgeType:e)-> srcVType:tgt
       ACCUM tgt.@rEdgeTgtSet += vertex_to_int(src)
   ;

   X = SELECT src
       FROM S:src
       POST-ACCUM
         int missingForward = 0,
         int missingReverse = 0,
         RecoverEdges(__ENGINE__SERVICEAPI,
             __ENGINE__REQUEST,
             __ENGINE__CONTEXT,
             edgeType,
             rEdgeType,
             src,
             src.@EdgeTgtSet,
             src.@rEdgeTgtSet,
             missingForward,
             missingReverse,
             dryrun),
         @@NoDirectEdgeCnt += missingForward,
         @@NoReverseEdgeCnt += missingReverse,
         #clear existing tgt list
         src.@EdgeTgtSet.clear(),
         src.@rEdgeTgtSet.clear()
   ;

   PRINT @@NoDirectEdgeCnt, @@NoReverseEdgeCnt, S.size(), T.size(), S1.size(), T1.size(), X.size();
}
