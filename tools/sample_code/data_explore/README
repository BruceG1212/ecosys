Instruction on FindUnknownByType
FindUnknownByType can be used to find out all unknown vertices of a given type in tigergraph system and record them on disk.

***************************************************************************************************************
The assumption for recording the unknown vertices is that the vertex type must have one string type attribute.
***************************************************************************************************************

To download the query:
    wget https://github.com/tigergraph/ecosys/blob/master/sample_code/data_explore/find_unknown_vetices_by_type.gsql
 where we used two user defined function to collect unknown vertices, i.e.
 1) GetUnknownVertices() method is used to get unknown vertices
 2) GetExternalID() method will output the corresponding unknown vertices in the following format with three columns 
    "VertexTypeId", "Internal ID", "One string type attribute at the given position" (it will be in the format of prefix + attr.GetString(pos))

 The user-defined function GetUnknownVertices() and  GetExternalID()  is defined in the following ExprFunctions.hpp
    wget https://github.com/tigergraph/ecosys/blob/master/sample_code/data_explore/ExprFunctions.hpp

Instructions to install the query
  1) download the query and ExprFunctions.hpp: 
     Change the  "_graphname_" in the query to your own graph name
  2) make a copy of current ExprFunctions.hpp
     cp $tigergraph/dev/gdk/gsql/src/QueryUdf/ExprFunctions.hpp  $tigergraph/dev/gdk/gsql/src/QueryUdf/ExprFunctions.hpp.bk
  3) Replace the ExprFuction.hpp with the downloaded one

Install queries: 
  gsql find_unknown_vetices_by_type.gsql
  gsql -g $graph_name 'install query FindUnknownByType'

Instructions to run the query

FindUnknownByType takes the following 4 input parameters, i.e.
  1) string vType: vType is type name of the vertex needed to search for unknown vertices.
  2) int pos: the index of a string type attribute for the unknown vertex type so that we can identify which unknown vertex it is.
     For example, if vertex type company has the schema of
         VERTEX company(PRIMARY_ID companyId STRING, id STRING COMPRESS, label BOOL, company_name STRING, nCount INT)
     If we want use company_name as the identity for the unknown then the input pos = 2 (since it is third attribute and index starts with 0).
     NOTICE: pos must be the index for a string type attribute Or else we need modify the GetExternalID() 
  3) string prefix: prefix is an add on string added to the identity in the output and if we do not need it we can use prefix=""  (empty string)
  4) string output :  output is the output path for the recorded unknown vertices, its default value is  "/app/data/unknown_vertices"  

Example of running query FindUnknownByType:

1) run it by curl
    curl -H "GSQL-TIMEOUT:800000" -X GET 'localhost:9000/FindUnknownByType?vType=company&pos=2&prefix=""&output=/tmp/unknown'
  where we used GSQL-TIMEOUT header to give a 800 seconds timeout for this query. Because this query might take long time to finish.
2) run it by gsql
  gsql -g graph_name 'run query FindUnknownByType("company", 2, "", "/tmp/unknown")'

The result of running the query:
If there is no unknown vertex the return JSON should have "@@vlist.size()": 0, "Y.size()": 0. And the generated file should also empty.

