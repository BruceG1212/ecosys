USE GRAPH ldbc_snb

CREATE QUERY ic_3(vertex<Person> pid, string x, string y,
    datetime startDate, int duration) FOR GRAPH ldbc_snb SYNTAX _v2 {
  SetAccum<vertex> @xSet, @ySet;
  SumAccum<int> @xCount, @yCount, @totalCount;
  S = { pid };
  S =
    SELECT p
    FROM S:s -(KNOWS*1..2)- Person:p,
         :p -(<HAS_CREATOR)- (Post|Comment):m -(IS_LOCATED_IN>)- Country:c1,
         :p -(IS_LOCATED_IN>.IS_PART_OF>)- Country:c2
    WHERE p != s
          and (c1.name == x or c1.name == y)
          and (c2.name != x and c2.name != y)
          and m.creationDate >= startDate
          and m.creationDate < datetime_add(startDate, INTERVAL duration DAY)
    ACCUM CASE
      WHEN c1.name == x THEN
        p.@xSet += m
      WHEN c1.name == y THEN
        p.@ySet += m
      END
    POST-ACCUM 
      p.@xCount = p.@xSet.size(), p.@xSet.clear(),
      p.@yCount = p.@ySet.size(), p.@ySet.clear(),
      p.@totalCount = p.@xCount + p.@yCount
    ORDER BY p.@xCount DESC, p.id ASC
    LIMIT 20;

  PRINT S[
    S.id AS personId,
    S.firstName AS personFirstName,
    S.lastName AS personLastName,
    S.@xCount AS xCount,
    S.@yCount AS yCount,
    S.@totalCount AS totalCount
  ];
}

