use graph ldbc_snb
drop query aggs

#each groupby individually bind one or more aggregate functions
CREATE QUERY aggs() FOR GRAPH ldbc_snb SYNTAX v2 {


Typedef tuple <length int , ts DATETIME, comment vertex> commentTuple;

Typedef HeapAccum <commentTuple> (20, ts desc, length desc) commentHeap1;
Typedef HeapAccum <commentTuple> (20, ts asc, length desc) commentHeap2;
Typedef HeapAccum <commentTuple> (20, length desc, ts desc) commentHeap3;
Typedef HeapAccum <commentTuple> (20, length asc, ts desc) commentHeap4;
Typedef HeapAccum <commentTuple> (10, ts desc, length desc) commentHeap5;
Typedef HeapAccum <commentTuple> (10, ts asc, length desc) commentHeap6;


GroupByAccum<int yy,  commentHeap1 topk_latest_comment, commentHeap2 topk_earliest_comment, 
                      commentHeap3 topk_longest_comment, commentHeap4 topk_shortest_comment, 
                      commentHeap5 topk_oldest_author_comment, commentHeap6 topk_youngest_author_comment> @@groupby_yy;  

GroupByAccum<vertex city, string browser, int yy, int mm, int len, SumAccum<int> cnt> @@groupby_city_browser_yy_mm_len;
GroupByAccum<vertex city, string gender, string browser, int yy, int mm, AvgAccum avg_len> @@groupby_city_gender_browser_yy_mm;


T = SELECT c 
    FROM City:city - (<IS_LOCATED_IN) - Person:ps - (LIKES>) - Comment:c
    WHERE year(c.creationDate) >= 2010 AND  year(c.creationDate) <= 2012
    ACCUM  
      int len = c.length,
      int len_with_cap = len,
      Datetime ts = c.creationDate,
      Datetime dob = ps.birthday,
      int mm  = month(c.creationDate),
      int yy  = year(c.creationDate),

      CASE WHEN len_with_cap > 100 THEN len_with_cap = 100 END, 

      @@groupby_yy += (yy -> commentTuple(len, ts, c), commentTuple(len, ts, c), commentTuple(len,ts, c), commentTuple(len, ts, c), commentTuple(len, dob, c), commentTuple(len, dob, c)), 
      @@groupby_city_browser_yy_mm_len  += (city, c.browserUsed, yy, mm, len_with_cap  ->  1),
      @@groupby_city_gender_browser_yy_mm +=  (city, ps.gender, c.browserUsed, yy, mm -> len);
}
