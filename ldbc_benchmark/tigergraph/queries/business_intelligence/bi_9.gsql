CREATE OR REPLACE QUERY bi_9(STRING tagClass1Name, STRING tagClass2Name, INT threshold) FOR GRAPH ldbc_snb { 
  TYPEDEF TUPLE<INT forumId, INT count1, INT count2, INT count21> forumStats;

  OrAccum @isType1, @isType2;
  SumAccum<INT> @numMembers;
#  SetAccum<VERTEX<Forum>> @@forumLarge;
#  SumAccum<INT> @forumId;
#  GroupByAccum<INT forumId, SumAccum<INT> count1, SumAccum<INT> count2> @@forumStatsGroup;
  SumAccum<INT> @m1, @m2;
  HeapAccum<forumStats>(100, count21 DESC, forumId ASC) @@forumStatsTop;

  vTagClass = { TagClass.* };
/*  vTagClass =
    SELECT v
    FROM vTagClass:v
    WHERE v.name == tagClass1Name OR v.name == tagClass2Name
    ACCUM 
      CASE 
        WHEN v.name == tagClass1Name THEN 
          v.@isType1 += True
        WHEN v.name == tagClass2Name THEN 
          v.@isType2 += True
      END;
*/
  vTag =
    SELECT t
    FROM vTagClass:s-(Tag_HAS_TYPE_TagClass_REVERSE:e)->Tag:t
    ACCUM 
      t.@isType1 += (s.name == tagClass1Name),
      t.@isType2 += (s.name == tagClass2Name);

  vForum = { Forum.* };
  vForum =
    SELECT s
    FROM vForum:s-(Forum_HAS_MEMBER_Person:e)->Person:t
    ACCUM s.@numMembers += 1
    HAVING s.@numMembers > threshold;

  vPost =
    SELECT t
    FROM vForum:s-(Forum_CONTAINER_OF_Post:e)->Post:t;

  tagPosts =
    SELECT s
    FROM vPost:s-(Post_HAS_TAG_Tag:e)->Tag:t
    WHERE t.@isType1 OR t.@isType2
    ACCUM 
      s.@isType1 += t.@isType1,
      s.@isType2 += t.@isType2;

  aggPostTag = 
    SELECT s
    FROM tagPosts:s-(Forum_CONTAINER_OF_Post_REVERSE:e)->Forum:t
    ACCUM  
      If s.@isType1 THEN t.@m1 += 1 END,
      IF s.@isType2 THEN t.@m2 += 1 END;

  lastStep =
    SELECT s
    FROM vForum:s
    WHERE s.@m1 > 0 AND s.@m2 > 0
    POST-ACCUM
      @@forumStatsTop += forumStats(s.id, s.@m1, s.@m2, abs(s.@m1 - s.@m2));  

  FOREACH v IN @@forumStatsTop DO
    PRINT v.forumId, v.count1, v.count2;
  END;
}
