# Most authoritative users on a given topic
CREATE QUERY bi_7(STRING tagName) FOR GRAPH ldbc_snb { 
  SumAccum<INT> @authorityScore, @popularityScore;
  OrAccum @hasGivenTag;

  vTag = {Tag.*};
  vTag = 
    SELECT s 
    FROM vTag:s 
    WHERE s.name == tagName;

  # Target messages
  vMessage12 = 
    SELECT t 
    FROM vTag:s-((Comment_HAS_TAG_Tag_REVERSE|Post_HAS_TAG_Tag_REVERSE):e)->:t
    ACCUM t.@hasGivenTag = TRUE;

  vPerson = 
    SELECT t 
    FROM vMessage12:s-((Post_HAS_CREATOR_Person|Comment_HAS_CREATOR_Person):e)->:t; 

  vPerson2 = 
    SELECT t 
    FROM vMessage12:s-((Person_LIKES_Comment_REVERSE|Person_LIKES_Post_REVERSE):e)->:t; 

  vMessage3 = 
    SELECT t 
    FROM vPerson2:s-((Post_HAS_CREATOR_Person_REVERSE|Comment_HAS_CREATOR_Person_REVERSE):e)->:t; 

  vMessage3 = 
    SELECT s 
    FROM vMessage3:s-((Person_LIKES_Comment_REVERSE|Person_LIKES_Post_REVERSE):e)->:t
    ACCUM s.@popularityScore += 1;

  # Traverse backwards
  vPerson2 = 
    SELECT t 
    FROM vMessage3:s-((Post_HAS_CREATOR_Person|Comment_HAS_CREATOR_Person):e)->:t
    ACCUM t.@popularityScore += s.@popularityScore;

  vMessage12 = 
    SELECT t 
    FROM vPerson2:s-((Person_LIKES_Comment|Person_LIKES_Post):e)->:t
    WHERE t.@hasGivenTag == TRUE
    ACCUM t.@authorityScore += s.@popularityScore;

  vPerson = 
    SELECT t 
    FROM vMessage12:s-((Post_HAS_CREATOR_Person|Comment_HAS_CREATOR_Person):e)->:t
    ACCUM t.@authorityScore += s.@authorityScore
    ORDER BY t.@authorityScore DESC, t.id ASC
    LIMIT 100;

  PRINT vPerson[
      vPerson.id AS personId, 
      vPerson.@authorityScore AS authorityScore];
}