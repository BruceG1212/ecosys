USE GRAPH ldbc_snb
DROP QUERY bi_20

CREATE QUERY bi_20(SET<STRING> tagClasses) FOR GRAPH ldbc_snb { 
  
	TYPEDEF TUPLE <STRING tagClassName, INT messageCount> INFO;
	HeapAccum<INFO>(100, messageCount DESC, tagClassName ASC) @@result;
	SumAccum<STRING> @tagClassName;
	MapAccum<STRING, INT> @@count;
	
	TagClass = {tagclass.*};
	TagClass = SELECT s
	           FROM TagClass:s
	           WHERE s.name IN tagClasses
	           ACCUM s.@tagClassName = s.name;
	Tags = {};
	WHILE (TagClass.size() > 0) DO
    		tmp = SELECT t 
	              FROM TagClass:s -(tag_hasType_tagclass_reverse:e)-> :t
	              ACCUM t.@tagClassName = s.@tagClassName;
	  	Tags = Tags UNION tmp;
	  	TagClass = SELECT t 
	                   FROM TagClass:s -(tagclass_isSubclassOf_tagclass_reverse:e)-> :t
	             	   ACCUM t.@tagClassName = s.@tagClassName;
	END;
	
	Messages = SELECT t
	           FROM Tags:s -((comments_hasTag_tag_reverse | post_hasTag_tag_reverse):e) -> :t
	           ACCUM @@count += (s.@tagClassName -> 1);
	
	FOREACH (key, value) IN @@count DO
    		@@result += INFO(key, value);
	END;
	PRINT @@result; 	
}

INSTALL QUERY bi_20
