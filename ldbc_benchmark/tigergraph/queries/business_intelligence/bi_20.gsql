CREATE QUERY bi_20(SET<STRING> tagClassNames) FOR GRAPH ldbc_snb { 
  TYPEDEF TUPLE<STRING tagClassName, INT messageCount> INFO;

  HeapAccum<INFO>(100, messageCount DESC, tagClassName ASC) @@result;
  SumAccum<STRING> @tagClassName;
  MapAccum<STRING, INT> @@count;

  vTagClass = { TagClass.* };
  vTagClass = 
    SELECT s
    FROM vTagClass:s
    WHERE s.name IN tagClassNames
    ACCUM s.@tagClassName = s.name;

  vTags = {};
  WHILE (vTagClass.size() > 0) DO
    tmp = 
      SELECT t 
      FROM vTagClass:s-(Tag_HAS_TYPE_TagClass_REVERSE:e)->:t
      ACCUM t.@tagClassName = s.@tagClassName;

    vTags = vTags UNION tmp;

    vTagClass = 
      SELECT t 
      FROM vTagClass:s-(TagClass_IS_SUBCLASS_OF_TagClass_REVERSE:e)->:t
      ACCUM t.@tagClassName = s.@tagClassName;
  END;

  vMessages = 
    SELECT t
    FROM vTags:s-((Comment_HAS_TAG_Tag_REVERSE|Post_HAS_TAG_Tag_REVERSE):e)->:t
    ACCUM @@count += (s.@tagClassName -> 1);

  FOREACH (key, value) IN @@count DO
    @@result += INFO(key, value);
  END;

  PRINT @@result; 	
}