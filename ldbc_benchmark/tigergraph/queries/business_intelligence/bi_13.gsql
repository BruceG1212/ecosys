CREATE QUERY bi_13(STRING countryName) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<STRING tag_name, INT popularity> tagInfo;
  TYPEDEF TUPLE<INT year, INT month, JSONARRAY popularTags> tagStats;

  GroupByAccum<INT year, INT month, SumAccum<INT> numMsg> @@numMsgGroup;
  GroupByAccum<INT year, INT month, GroupByAccum<STRING tagName, SumAccum<INT> popularity> tagGroup> @@monthlyGroup;
  HeapAccum<tagInfo>(5, popularity DESC, tag_name ASC) @@tagInfoTop;
  HeapAccum<tagStats>(100, year DESC, month ASC) @@tagStatsTop;

  STRING jsonStr;
  bool isFirstTuple;

  vCountry = { Country.* };
  vMessage = 
    SELECT t
    FROM vCountry:s-((Comment_IS_LOCATED_IN_Country_REVERSE|Post_IS_LOCATED_IN_Country_REVERSE):e)->(Comment|Post):t
    WHERE s.name == countryName
    POST-ACCUM @@numMsgGroup += (year(t.creationDate), month(t.creationDate) -> 1);

  vMessage = 
    SELECT s
    FROM vMessage:s-((Comment_HAS_TAG_Tag|Post_HAS_TAG_Tag):e)->Tag:t
    ACCUM 
      @@monthlyGroup += (year(s.creationDate), month(s.creationDate) -> (t.name -> 1)),
      @@numMsgGroup += (year(s.creationDate), month(s.creationDate) -> (-1));

  // put stats for empty tags
  FOREACH (y,m,num) IN @@numMsgGroup DO
    @@monthlyGroup += (y, m -> ("" -> num));
  END;

  FOREACH (y,m,tg) IN @@monthlyGroup DO
    @@tagInfoTop.clear();
    // put tags into heap to get 5 most popular tags
    FOREACH t IN tg DO
      @@tagInfoTop += tagInfo(t.tagName, t.popularity);
    END;

    // put 5 most popular tags into JSONARRAY
    jsonStr = "[";
    isFirstTuple = True;
    FOREACH ti IN @@tagInfoTop DO
      IF NOT isFirstTuple THEN
        jsonStr += ",";
      ELSE
        isFirstTuple = False;
      END;
      jsonStr += "[\"" + ti.tag_name + "\"," + to_string(ti.popularity) + "]";
    END;
    jsonStr += "]";
    @@tagStatsTop += tagStats(y, m, parse_json_array(jsonStr));
  END;

  PRINT @@tagStatsTop;
}