CREATE QUERY ic_11(VERTEX<Person> personId, STRING countryName, INT workFromYear) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<INT personId, STRING personFirstName, STRING personLastName, STRING organizationName, INT organizationWorkFromYear> friendInfo;

  ListAccum<VERTEX<Person>> @@friendAll;
  OrAccum @visited;
  MapAccum<INT, STRING> @@orgCountryMap;
  HeapAccum<friendInfo>(10, organizationWorkFromYear ASC, personId ASC, organizationName DESC) @@friendInfoTop;

  INT i;

  vPerson = { personId };
  WHILE i < 2 DO
    vPerson = 
      SELECT t
      FROM vPerson:s-((Person_KNOWS_Person|Person_KNOWS_Person_REVERSE):e)->Person:t
      WHERE t.@visited == False
      ACCUM 
        s.@visited += True,
        t.@visited += True,
        @@friendAll += t;

    i += 1;
  END;

  vFriend = { @@friendAll };
  vCompany = { Company.* };
  vOrg = 
    SELECT s
    FROM vCompany:s-(Company_IS_LOCATED_IN_Country:e)->Country:t
    ACCUM @@orgCountryMap += (s.id -> t.name);

  vFriend = 
    SELECT s
    FROM vFriend:s-(Person_WORK_AT_Company:e)->Company:t
    WHERE e.workFrom < workFromYear
    ACCUM @@friendInfoTop += friendInfo(s.id, s.firstName, s.lastName, t.name, e.workFrom);

  PRINT @@friendInfoTop;
}