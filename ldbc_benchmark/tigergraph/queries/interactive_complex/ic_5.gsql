CREATE QUERY ic_5(VERTEX<Person> personId, DATETIME minDate) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<STRING forumTitle, INT postCount, INT forumId> groupStats;

  OrAccum @visited;
  SetAccum<VERTEX<Person>> @@friendAll;
	SetAccum<INT> @memberIds;
	SumAccum<INT> @creatorId;
  SumAccum<INT> @postCount;
  HeapAccum<groupStats>(20, postCount DESC, forumId ASC) @@groupStatsTop;
	

  INT i = 0;

  vPerson = { personId };
  WHILE i < 2 DO
    vPerson = 
      SELECT t
      FROM vPerson:s-((Person_KNOWS_Person|Person_KNOWS_Person_REVERSE):e)->Person:t
      WHERE t.@visited == False
      ACCUM 
        s.@visited += True,
        t.@visited += True,
        @@friendAll += t;

    i += 1;
  END;

  vFriend = { @@friendAll };
	@@friendAll.clear();
  vForum = 
    SELECT t
    FROM vFriend:s-(Forum_HAS_MEMBER_Person_REVERSE:e)->Forum:t
    WHERE e.joinDate > minDate
	  ACCUM
	    @@friendAll += s,
	    t.@memberIds += s.id;

	vFriend = { @@friendAll };
  findPost = 
    SELECT t
    FROM vFriend:s-(Post_HAS_CREATOR_Person_REVERSE:e)->Post:t
	  ACCUM t.@creatorId = s.id;

  aggForum = 
    SELECT t
    FROM vForum:s-(Forum_CONTAINER_OF_Post:e)->Post:t
    ACCUM CASE WHEN t.@creatorId IN s.@memberIds THEN s.@postCount += 1 END
    POST-ACCUM @@groupStatsTop += groupStats(s.title, s.@postCount, s.id);

  FOREACH gs IN @@groupStatsTop DO
    PRINT 
      gs.forumTitle AS forumTitle,
      gs.postCount AS postCount;
  END;
}