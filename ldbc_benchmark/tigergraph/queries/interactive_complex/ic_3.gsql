USE GRAPH ldbc_snb
DROP QUERY ic_3

CREATE QUERY ic_3(VERTEX<person> personId, STRING countryXName, STRING countryYName, 
    DATETIME startDate, INT durationDays) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<STRING firstName, STRING lastName> fullName;
  TYPEDEF TUPLE<INT personId, STRING personFirstName, STRING personLastName, INT xCount, 
      INT yCount, INT count_> msgStats; 

  ListAccum<VERTEX<person>> @@friendAll;
  OrAccum @visited;
  SetAccum<INT> @@cityIds;
  SumAccum<INT> @personId;
  MapAccum<INT, fullName> @@personNameMap;
  GroupByAccum<INT personId, SumAccum<INT> xCount, SumAccum<INT> yCount> @@msgStatsGroup;
  HeapAccum<msgStats>(20, xCount DESC, personId ASC) @@msgStatsTop;

  DATETIME endDate;
  INT i = 0;

  vPerson = { personId };
  WHILE i < 2 DO
    vPerson = 
      SELECT t
      FROM vPerson:s-((person_knows_person|person_knows_person_reverse):e)->person:t
      WHERE t.@visited == False
      ACCUM 
        s.@visited += True,
        t.@visited += True,
        @@friendAll += t;

    i += 1;
  END;

  vCountry = { country.* };
  vCountry =
    SELECT s
    FROM vCountry:s-(city_isPartOf_country_reverse:e)-city:t
    ACCUM 
      CASE 
        WHEN s.name == countryXName OR s.name == countryYName THEN
          @@cityIds += t.id
      END;

  vFriend = { @@friendAll };
  vFriend = 
    SELECT s
    FROM vFriend:s-(person_isLocatedIn_city:e)->city:t
    WHERE NOT @@cityIds.contains(t.id);

  endDate = datetime_add(startDate, INTERVAL durationDays DAY);

  vMessage = 
    SELECT t
    FROM vFriend:s-((comments_hasCreator_person_reverse|post_hasCreator_person_reverse):e)->(comments|post):t
    WHERE startDate <= t.creationDate AND t.creationDate < endDate
    ACCUM t.@personId = s.id
    POST-ACCUM @@personNameMap += (s.id -> fullName(s.firstName, s.lastName));

  vMessage = 
    SELECT s
    FROM vMessage:s-((comments_isLocatedIn_country|post_isLocatedIn_country):e)->country:t
    ACCUM 
      CASE 
        WHEN t.name == countryXName THEN 
          @@msgStatsGroup += (s.@personId -> 1, 0)
        WHEN t.name == countryYName THEN 
          @@msgStatsGroup += (s.@personId -> 0, 1)
      END;

  FOREACH (id,x,y) IN @@msgStatsGroup DO
    @@msgStatsTop += msgStats(id, @@personNameMap.get(id).firstName, 
        @@personNameMap.get(id).lastName, x, y, (x + y));
  END;

  PRINT @@msgStatsTop;
}

INSTALL QUERY ic_3