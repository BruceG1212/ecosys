CREATE QUERY ic_14(VERTEX<Person> person1Id, VERTEX<Person> person2Id) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<JSONARRAY personIdsInPath, DOUBLE pathWeight> pathInfo;
  SumAccum<INT> @dist1 = -1, @dist2 = -1;
  SumAccum<INT> @@next;
  ListAccum<ListAccum<VERTEX<Person>>> @path1, @path2;
  ListAccum<ListAccum<VERTEX<Person>>> @@pathAll;
  SumAccum<DOUBLE> @@weight = 0.0;
  SetAccum<VERTEX<Person>> @@personAllInPathAll;
  SetAccum<VERTEX<Comment>> @@commentsSeed;
  MapAccum<INT, SetAccum<VERTEX<Comment>>> @@commentsAll;
  MapAccum<INT, SetAccum<VERTEX<Post>>> @@postAll;
  HeapAccum<pathInfo>(0, pathWeight DESC) @@pathInfoTop;

  OrAccum @@found = False;
  STRING jsonStr = "[]";

  IF person1Id != person2Id THEN
    vPerson = { person1Id, person2Id };
    vPerson = 
      SELECT v
      FROM vPerson:v
      ACCUM 
        CASE 
          WHEN v == person1Id THEN 
            v.@dist1 = 0
          WHEN v == person2Id THEN
            v.@dist2 = 0
        END;

    @@personAllInPathAll += person1Id;
    @@personAllInPathAll += person2Id;

    WHILE NOT @@found DO
      @@next = 0;

      vPerson = 
        SELECT t
        FROM vPerson:s-((Person_KNOWS_Person|Person_KNOWS_Person_REVERSE):e)->Person:t
        WHERE (s.@dist1 > -1 AND t.@dist1 < 0) OR (s.@dist2 > -1 AND t.@dist2 < 0)
        ACCUM
          CASE
            WHEN (s.@dist1 > -1 AND t.@dist2 > -1) OR (s.@dist2 > -1 AND t.@dist1 > -1) THEN
              @@found += True,
              IF s.@dist1 > -1 THEN
                FOREACH p1 IN s.@path1 DO
                  FOREACH p2 IN t.@path2 DO
                    @@pathAll += p1 + [s] + [t] + p2,
                    FOREACH p IN p1 DO
                      @@personAllInPathAll += p
                    END,
                    FOREACH p IN p2 DO
                      @@personAllInPathAll += p
                    END
                  END
                END
              END
            WHEN s.@dist1 > -1 THEN
              @@next += 1,
              t.@dist1 = s.@dist1 + 1,
              IF s.@path1.size() > 0 THEN
                FOREACH p IN s.@path1 DO
                  t.@path1 += p + [s]
                END
              ELSE
                t.@path1 += [s]
              END
            WHEN s.@dist2 > -1 THEN
              @@next += 1,
              t.@dist2 = s.@dist2 + 1,
              IF s.@path2.size() > 0 THEN
                FOREACH p IN s.@path2 DO
                  t.@path2 += [s] + p
                END
              ELSE
                t.@path2 += [s]
              END
          END
        POST-ACCUM
          IF NOT @@found AND t.@dist1 > -1 AND t.@dist2 > -1 THEN
            @@found += True,
            FOREACH p1 IN t.@path1 DO
              FOREACH p2 IN t.@path2 DO
                @@pathAll += p1 + [t] + p2,
                FOREACH p IN p1 DO
                  @@personAllInPathAll += p
                END,
                FOREACH p IN p2 DO
                  @@personAllInPathAll += p
                END
              END
            END
          END;

      IF @@next == 0 THEN
        BREAK;
      END;

    END;
  END;

  @@pathInfoTop.resize(@@pathAll.size());

  vPerson = { @@personAllInPathAll };

  vComments = 
    SELECT t
    FROM vPerson:s-(Comment_HAS_CREATOR_Person_REVERSE:e)->Comment:t
    ACCUM @@commentsAll += (s.id -> t);

  vPost = 
    SELECT t
    FROM vPerson:s-(Post_HAS_CREATOR_Person_REVERSE:e)->Post:t
    ACCUM @@postAll += (s.id -> t);

  FOREACH path IN @@pathAll DO
    jsonStr = "[";
    @@weight = 0.0;
    FOREACH i IN range[0, path.size()-2] DO
      // person1's Comment -(replyOf)-> person2's Post|Comment
      @@commentsSeed = @@commentsAll.get(path.get(i).id);
      vComments = { @@commentsSeed };
      vComments = 
        SELECT s
        FROM vComments:s-(Comment_REPLY_OF_Post:e)-Post:t
        ACCUM CASE WHEN @@postAll.get(path.get(i+1).id).contains(t) THEN @@weight += 1 END;

      vComments = 
        SELECT s
        FROM vComments:s-(Comment_REPLY_OF_Comment:e)-Comment:t
        ACCUM CASE WHEN @@commentsAll.get(path.get(i+1).id).contains(t) THEN @@weight += 0.5 END;

      // person2's Comment -(replyOf)-> person1's Post|Comment
      @@commentsSeed = @@commentsAll.get(path.get(i+1).id);
      vComments = { @@commentsSeed };
      vComments = 
        SELECT s
        FROM vComments:s-(Comment_REPLY_OF_Post:e)-Post:t
        ACCUM CASE WHEN @@postAll.get(path.get(i).id).contains(t) THEN @@weight += 1 END;

      vComments = 
        SELECT s
        FROM vComments:s-(Comment_REPLY_OF_Comment:e)-Comment:t
        ACCUM CASE WHEN @@commentsAll.get(path.get(i).id).contains(t) THEN @@weight += 0.5 END;

      jsonStr += bigint_to_string(path.get(i).id) + ",";
    END;
    jsonStr += bigint_to_string(path.get(path.size()-1).id) + "]";
    @@pathInfoTop += pathInfo(parse_json_array(jsonStr), @@weight);
  END;

  PRINT @@pathInfoTop;
}