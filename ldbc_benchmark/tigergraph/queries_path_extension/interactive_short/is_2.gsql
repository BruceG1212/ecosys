USE GRAPH ldbc_snb
DROP QUERY is_2

CREATE QUERY is_2(vertex<Person> personId) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<int messageId, 
                string messageContent, 
                datetime messageCreationDate, 
                int originalPostId, 
                int originalPostAuthorId, 
                string originalPostAuthorFirstName, 
                string originalPostAuthorLastName> mInfo;
  
  HeapAccum<mInfo>(10, messageCreationDate DESC, messageId DESC) @@mInfoTop;

  vPerson = { personId };

  vMessage = 
    SELECT t
    FROM vPerson:s-((<Comment_HAS_CREATOR_Person|<Post_HAS_CREATOR_Person):e)-(Comment|Post):t
    ORDER BY t.creationDate DESC, t.id DESC
    LIMIT 10;

  vMessage = 
    SELECT s
    FROM vMessage:s-(Comment_REPLY_OF_Comment>*0..:e1a.Comment_REPLY_OF_Post>*0..1:e1b)-Post:im-(Post_HAS_CREATOR_Person>:e2)-Person:t
    ACCUM
      CASE
        WHEN s.type == "Comment" THEN
          @@mInfoTop += mInfo(s.id, s.content, s.creationDate, im.id, t.id, t.firstName, t.lastName)
        ELSE
          @@mInfoTop += mInfo(s.id, s.imageFile, s.creationDate, im.id, t.id, t.firstName, t.lastName)
      END;
  
  PRINT @@mInfoTop;  
}

INSTALL QUERY is_2
