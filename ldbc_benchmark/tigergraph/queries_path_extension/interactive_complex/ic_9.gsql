USE GRAPH ldbc_snb
DROP QUERY ic_9

CREATE QUERY ic_9(vertex<Person> personId, int maxDateEpoch) FOR GRAPH ldbc_snb {
  TYPEDEF tuple<int personId, string personFirstName, string personLastName, int messageId, string messageContent, datetime messageCreationDate> msgInfo;
  
  OrAccum @visited;
  HeapAccum<msgInfo>(20, messageCreationDate DESC, messageId ASC) @@msgInfoTop;

  // maxDateEpoch is in millisecond and epoch_to_datetime() won't work properly with 13-digit epoch,
  // so truncate millisecond portion of the given epoch
  datetime maxDate = epoch_to_datetime(maxDateEpoch/1000);

  vPerson = { personId };
	
  vMessage = 
    SELECT t
    FROM vPerson:s-(Person_KNOWS_Person>*1..2:e1)-Person:im-((<Comment_HAS_CREATOR_Person|<Post_HAS_CREATOR_Person):e2)-(Comment|Post):t
    WHERE im.@visited == False
    AND t.creationDate < maxDate
    ACCUM 
      s.@visited += True,
      im.@visited += True,
      CASE 
        WHEN t.type == "Comment" THEN 
          @@msgInfoTop += msgInfo(im.id, im.firstName, im.lastName, t.id, t.content, t.creationDate)
        ELSE 
          @@msgInfoTop += msgInfo(im.id, im.firstName, im.lastName, t.id, t.imageFile, t.creationDate)
      END;

  PRINT @@msgInfoTop;
}

INSTALL QUERY ic_9