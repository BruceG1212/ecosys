USE GRAPH ldbc_snb
DROP QUERY ic_4

CREATE QUERY ic_4(vertex<Person> personId, int startDateEpoch, int durationDays) FOR GRAPH ldbc_snb {
  TYPEDEF tuple<string tagName, int postCount> tagStats;

  SumAccum<int> @postCount;
  SetAccum<vertex<Tag>> @@tagsFav, @@tagsExc;
  HeapAccum<tagStats>(10, postCount DESC, tagName ASC) @@tagStatsTop;
  datetime startDate, endDate;

  vPerson = { personId };
	
  // startDateEpoch is in millisecond and epoch_to_datetime() won't work properly with 13-digit epoch,
  // so truncate millisecond portion of the given epoch
  startDate = epoch_to_datetime(startDateEpoch/1000);
  endDate = datetime_add(startDate, INTERVAL durationDays DAY);

  vTag = 
    SELECT t
    FROM vPerson:s-(Person_KNOWS_Person>:e1a.<Post_HAS_CREATOR_Person:e1b)-Post:im-(Post_HAS_TAG_Tag>:e2)-Tag:t
    ACCUM 
      CASE 
        WHEN im.creationDate >= startDate AND im.creationDate < endDate THEN 
          t.@postCount += 1
        WHEN im.creationDate < startDate THEN
          @@tagsExc += t
      END
    POST-ACCUM CASE WHEN t.@postCount > 0 THEN @@tagsFav += t END;

	@@tagsFav = @@tagsFav MINUS @@tagsExc;
	
	FOREACH t IN @@tagsFav DO
    @@tagStatsTop += tagStats(t.@postCount, t.name);
	END;
	
  PRINT @@tagStatsTop;
}

INSTALL QUERY ic_4