USE GRAPH ldbc_snb
DROP QUERY ic_2

CREATE QUERY ic_2(vertex<person> personId, int maxDateEpoch) FOR GRAPH ldbc_snb {
  TYPEDEF tuple<int personId, string personFirstName, string personLastName, int messageId, string messageContent, datetime messageCreationDate> friendMessage;

  HeapAccum<friendMessage>(20, messageCreationDate DESC, messageId ASC) @@friendMessageTop;
  datetime maxDate;
  
  vPerson = { personId };

  // maxDateEpoch is in millisecond and epoch_to_datetime() won't work properly with 13-digit epoch,
  // so truncate millisecond portion of the given epoch
  maxDate = epoch_to_datetime(maxDateEpoch/1000);

  vMessage = 
    SELECT t
    FROM vPerson:s-(person_knows_person>:e1)-person:im-((<comments_hasCreator_person|<post_hasCreator_person):e2)-(comments|post):t
    WHERE t.creationDate < maxDate
    ACCUM 
      CASE WHEN t.type == "comments" THEN
        @@friendMessageTop += friendMessage(im.id, im.firstName, im.lastName, t.id, t.content, t.creationDate)
      ELSE
        @@friendMessageTop += friendMessage(im.id, im.firstName, im.lastName, t.id, t.imageFile, t.creationDate)
      END;
  	
  PRINT @@friendMessageTop;
}

INSTALL QUERY ic_2