SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY ic1
CREATE DISTRIBUTED QUERY ic1(vertex<Person> personId, string firstName) FOR GRAPH ldbc_snb {
  typedef tuple<string orgName, int orgYear, string orgPlace> univTuple;
  typedef tuple<string orgName, int orgYear, string orgPlace> comTuple;
  SumAccum<uint> @distanceFromPerson;
  SumAccum<string> @friendCityName;
  SetAccum<univTuple> @friendUniversities;
  SetAccum<comTuple> @friendCompanies;
  SetAccum<vertex<Person>> @@friendSet;
  S = { personId };
  //dis=1 
  P = SELECT p
    FROM S:s -(KNOWS)- Person:p -(IS_LOCATED_IN>)- City:ct
    WHERE p != personId AND p.firstName == firstName
    PER(p,ct)
    ACCUM p.@distanceFromPerson = 1,
          p.@friendCityName = ct.name
    POST-ACCUM @@friendSet += p;
  //dis=2  
  P = 
    SELECT p
    FROM S:s -(KNOWS*2)- Person:p -(IS_LOCATED_IN>)- City:ct
    WHERE p != personId AND p.firstName == firstName
    PER(p,ct)
    ACCUM p.@distanceFromPerson = 2,
          p.@friendCityName = ct.name
    POST-ACCUM @@friendSet += p;
  //dis=3
  P = 
    SELECT p
    FROM S:s -(KNOWS*3)- Person:p -(IS_LOCATED_IN>)- City:ct
    WHERE p != personId AND p.firstName == firstName
    PER(p,ct)
    ACCUM p.@distanceFromPerson = 3,
          p.@friendCityName = ct.name
    POST-ACCUM @@friendSet += p;
  

  // Because number of Company and University are small, we can start from Company and Universities.
  // Person is used as target because it is cheaper to accumulate values on target
  P = {@@friendSet};
  P = 
    SELECT p
    FROM 
      P:p -(WORK_AT>:ew)- Company:co -(IS_LOCATED_IN>)- Country:cn,
      P:p -(STUDY_AT>:es)-University:u -(IS_LOCATED_IN>)- City:ct 
    PER MATCH
    ACCUM 
      p.@friendCompanies += comTuple(co.name, ew.workFrom, cn.name),
      p.@friendUniversities += univTuple(u.name, es.classYear, ct.name)
    ORDER BY p.@distanceFromPerson ASC, p.lastName ASC, p.id ASC
    LIMIT 20;

  print P[
    P.id AS friendId,
    P.lastName AS friendLastName,
    P.@distanceFromPerson AS distanceFromPerson,
    P.birthday AS friendBirthday,
    P.creationDate AS friendCreationDate,
    P.gender AS friendGender,
    P.browserUsed AS friendBrowserUsed,
    P.locationIP AS friendLocationIp,
    P.@friendCityName AS friendCityName,
    P.@friendUniversities AS friendUniversities,
    P.@friendCompanies AS friendCompanies
  ];
}
