//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 11 query description is on page 69 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi11

CREATE QUERY bi11(STRING countryName, set<STRING> blacklist) FOR GRAPH ldbc_snb { 
  TYPEDEF TUPLE<INT personId, STRING tagName, INT likeCount, INT replyCount> reply;

  SetAccum<string> @@blacklistedPatterns;
  AndAccum @isValid;
  SumAccum<INT> @personId,@likeCount;
  SetAccum<INT> @tagNames;
  SetAccum<VERTEX<Tag>> @tagSet;
  GroupByAccum<INT personId, STRING tagName, SumAccum<INT> likeCount, SumAccum<INT> replyCount> @@replyGroup;
  HeapAccum<reply>(100, likeCount DESC, personId ASC, tagName ASC) @@replyTop;
  
  FOREACH word IN blacklist DO
    @@blacklistedPatterns += ("%" + word + "%");
  END;

  P =
    SELECT p
    FROM Country:c -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p 
    WHERE c.name == countryName;

  R = 
    SELECT r
    FROM P:p-(<HAS_CREATOR)- Comment:r 
    ACCUM 
      r.@personId = p.id,
      FOREACH wordPattern IN @@blacklistedPatterns DO
        CASE WHEN r.content LIKE wordPattern THEN
          r.@isValid += false,
          BREAK
        END
      END
    HAVING r.@isValid;

  R = 
    SELECT r 
    FROM R:r-(HAS_TAG>)-Tag:t
    ACCUM r.@tagSet += t;

  invalidR =
    SELECT r
    FROM R:r -(REPLY_OF>.HAS_TAG>)- Tag:t
    PER(r,t)
    ACCUM 
      IF t IN r.@tagSet THEN r.@isValid += false END
    HAVING r.@isValid;

  R =
    SELECT r
    FROM  R:r -(<LIKES)- Person:p
    ACCUM r.@likeCount += 1
    POST-ACCUM 
      FOREACH t IN r.@tagSet DO
        @@replyGroup += (r.@personId, t.name -> r.@likeCount, 1)
      END;

  FOREACH (p,t,l,r) IN @@replyGroup DO
    @@replyTop += reply(p,t,l,r);
  END;

  PRINT @@replyTop;
}

//INSTALL QUERY bi11
//RUN QUERY bi11("Mexico", ["has","Green"])
