//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//IC 7 query description is on page 38 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY ic7

CREATE QUERY ic7(VERTEX<Person> personId) FOR GRAPH ldbc_snb {
  TYPEDEF tuple<INT personId, STRING personFirstName, STRING personLastName, DATETIME likeCreationDate, 
                INT commentOrPostId, STRING commentOrPostContent, INT minutesLatency, BOOL isNew> liker;
  HeapAccum<liker>(20, likeCreationDate DESC, commentOrPostId ASC) @@likerTop;
  AndAccum<BOOL> @isNew;
  SumAccum<INT> @MessageId;
  SumAccum<STRING> @MessageContent;
  SumAccum<INT> @minutesLatency;
  MaxAccum<DATETIME> @creationDate;

  S = { personId };
  P =
    SELECT p
    FROM S-(KNOWS)-Person:p
    ACCUM p.@isNew += FALSE;

  P = 
    SELECT p
    FROM S:s-(<HAS_CREATOR)- (Comment|Post):m -(<LIKES:e)-Person:p
    WHERE e.creationDate > p.@creationDate 
          OR (e.creationDate == p.@creationDate AND m.id < p.@MessageId)
    PER(m,p)
    ACCUM
      p.@creationDate += e.creationDate,
      p.@MessageId = m.id,
      p.@minutesLatency = datetime_diff(e.creationDate, m.creationDate) / 60,
      CASE WHEN m.type == "Comment" THEN
        p.@MessageContent = m.content
      ELSE
        p.@MessageContent = m.imageFile
      END
    POST-ACCUM @@likerTop += liker(p.id, p.firstName, p.lastName, p.@creationDate, p.@MessageId, 
                                     p.@MessageContent, p.@minutesLatency, p.@isNew);
  PRINT @@likerTop;
}


