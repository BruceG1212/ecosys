//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 21 query description is on page 79 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "v2"
USE GRAPH ldbc_snb
DROP QUERY bi21

CREATE QUERY bi21(string cName, datetime endDate) FOR GRAPH ldbc_snb {
  int secondsInMonth;
  SumAccum<int> @messageCount, @totalLikeCount, @zombieLikeCount;
  SumAccum<float> @zombieScore;
  SetAccum<vertex<Person>> @@ZombieSet;
  Zombie =
    SELECT p
    FROM Country:c -(<IS_PART_OF.<IS_LOCATED_IN)- Person:p -(<HAS_CREATOR)- (Post|Comment):m
    WHERE c.name == cName AND p.creationDate < endDate AND m.creationDate < endDate
    PER(p,m)
    ACCUM p.@messageCount += 1
    HAVING p.@messageCount < (year(endDate) - year(p.creationDate)) * 12 + (month(endDate) - month(p.creationDate)) + 1;
  
  Zombie = SELECT z FROM Zombie:z ACCUM @@ZombieSet += z;
  P2 =
    SELECT z
    FROM Zombie:z -(<HAS_CREATOR)- (Post|Comment):m -(<LIKES)- Person:p,
    WHERE p.creationDate < endDate
    PER(z,m,p)
    ACCUM 
      z.@totalLikeCount += 1, 
      IF p in @@ZombieSet THEN 
        z.@zombieLikeCount += 1
      END
    POST-ACCUM
      z.@zombieScore = 1.0 * z.@zombieLikeCount / z.@totalLikeCount;
  
  Zombie = SELECT z FROM Zombie:z ORDER BY z.@zombieScore DESC, z.id ASC LIMIT 100;
  PRINT Zombie[
    Zombie.id AS zombieId, 
    Zombie.@zombieLikeCount AS zombieLikeCount, 
    Zombie.@totalLikeCount AS totalLikeCount,
    Zombie.@zombieScore AS zombieScore];
}

//INSTALL QUERY bi21
//RUN QUERY bi21("Ethiopia","2013-01-01 00:00:00")
