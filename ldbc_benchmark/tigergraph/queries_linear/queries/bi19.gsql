  
//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 19 query description is on page 77 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "_v2"
USE GRAPH ldbc_snb
DROP QUERY bi19

CREATE QUERY bi19(datetime date, string name1, string name2) FOR GRAPH ldbc_snb{
  SetAccum<vertex> @friendSet, @strangerSet;
  SetAccum<vertex<Comment>> @commentSet;
  SumAccum<int> @strangerCount, @interactionCount;

  // all members of both class 1 and class 2 forums
  MemberSet = 
    SELECT p FROM TagClass:tc -(<HAS_TYPE.<HAS_TAG.HAS_MEMBER>)- Person:p -(<HAS_MEMBER.HAS_TAG>.HAS_TYPE>)-TagClass:tc
    WHERE tc.name == name1 AND tc.name == name2;

  // all persons born after a certain date
  PersonSet = SELECT p FROM Person:p WHERE p.birthday > date;

  // find friends (including oneself) of each person in PersonSet
  PersonWithFriends =
    SELECT s
    FROM PersonSet:s -(KNOWS)- MemberSet:t
    ACCUM s.@friendSet += t;

  // Person with interaction, the order here matters for speed
  PersonWithInteraction =
    SELECT p
    FROM PersonSet:p -(<HAS_CREATOR)- Comment:c -(REPLY_OF>*)- (Post|Comment) -(HAS_CREATOR>)- MemberSet:au
    WHERE au != p AND au NOT IN p.@friendSet
    PER(p,c,au)
    ACCUM 
      p.@interactionCount += 1,
      p.@strangerSet += au
    POST-ACCUM
      p.@friendSet.clear(),
      p.@strangerCount = p.@strangerSet.size(), p.@strangerSet.clear();

  PersonSet = SELECT p FROM PersonSet:p ORDER BY p.@interactionCount DESC, p.id ASC LIMIT 100;
  PRINT PersonSet[
    PersonSet.id AS personId, 
    PersonSet.@strangerCount AS strangerCount, 
    PersonSet.@interactionCount AS interactionCount];
}

INSTALL QUERY bi19
RUN QUERY bi19("1989-01-01 00:00:00","MusicalArtist","OfficeHolder")