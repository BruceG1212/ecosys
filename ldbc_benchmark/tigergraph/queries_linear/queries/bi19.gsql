  
//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 19 query description is on page 77 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
SET syntax_version = "_v2"
USE GRAPH ldbc_snb
DROP QUERY bi19

CREATE QUERY bi19(datetime date, string name1, string name2) FOR GRAPH ldbc_snb{
  MapAccum<INT, SetAccum<vertex<Person>>> @@friendMap;

  SetAccum<vertex<Person>> @strangerSet;
  SetAccum<vertex<Comment>> @commentSet;
  SumAccum<INT> @creator, @strangerCount, @interactionCount;

  // all members of both class 1 and class 2 forums
  P1 = 
    SELECT p FROM TagClass:tc -(<HAS_TYPE.<HAS_TAG.HAS_MEMBER>)- Person:p 
    WHERE tc.name == name1;
  P2 = 
    SELECT p FROM TagClass:tc -(<HAS_TYPE.<HAS_TAG.HAS_MEMBER>)- Person:p 
    WHERE tc.name == name2;
  Strangers = P1 INTERSECT P2;

  // find friends (including oneself) of each person in PersonSet
  PersonSet = SELECT p FROM Person:p WHERE p.birthday > date;
  PersonWithFriends =
    SELECT p
    FROM Strangers:s -(KNOWS)- Person:p
    WHERE p.birthday > date
    ACCUM @@friendMap += (p.id -> s);

  C1 =
    SELECT c
    FROM Person:p -(<HAS_CREATOR)- Comment:c
    WHERE p.birthday > date
    ACCUM c.@creator += p.id;

  C = 
    SELECT c
    FROM Strangers:s -(<HAS_CREATOR.<REPLY_OF)- C1:c
    ACCUM 
      IF s NOT IN @@friendMap.get(c.@creator) THEN
        c.@strangerSet += s
      END;
  @@friendMap.clear();

  PersonWithInteraction = 
    SELECT p
    FROM C:c -(HAS_CREATOR>)- Person:p
    ACCUM 
      p.@strangerSet += c.@strangerSet,
      p.@interactionCount += 1
    POST-ACCUM p.@strangerCount = p.@strangerSet.size(), p.@strangerSet.clear();

  PersonSet = SELECT p FROM PersonSet:p ORDER BY p.@interactionCount DESC, p.id ASC LIMIT 100;
  PRINT PersonSet[
    PersonSet.id AS personId, 
    PersonSet.@strangerCount AS strangerCount, 
    PersonSet.@interactionCount AS interactionCount];
}

#INSTALL QUERY bi19
#RUN QUERY bi19("1989-01-01 00:00:00","MusicalArtist","OfficeHolder")