CREATE QUERY postSummary(DATETIME startDate, DATETIME endDate) FOR GRAPH ldbc_snb {
/* Given a time range, find all Messages created in the range. 
Group them in 3 levels: Month of creation, Comment or Post, and Length of their content.
For each group, calculate the total message count, average message length, and sum of all message lengths.
*/    

  TYPEDEF TUPLE <INT Mon, BOOL isComment, STRING lengthCategory, INT messageCount, INT averageMessageLength, INT sumMessageLength> MessageInfo;
  HeapAccum<MessageInfo>(200, Mon ASC, isComment ASC, lengthCategory ASC) @@result;
  OrAccum @isComment;
  SumAccum<STRING> @lengthCategory;
  GroupByAccum<INT Mon, BOOL isComment, STRING lengthCategory, SumAccum<INT> messageCount, SumAccum<INT> sumMessageLength> @@calc;

  Start = {post.*, comments.*};
  Start = SELECT s
          FROM Start:s
          WHERE s.creationDate BETWEEN startDate AND endDate
          ACCUM s.@isComment = s.type == "comments",
              IF s.length < 40 THEN
                s.@lengthCategory = "0"
              ELSE IF s.length < 80 THEN
                s.@lengthCategory = "1"
              ELSE IF s.length < 160 THEN
                s.@lengthCategory = "2"
              ELSE
                s.@lengthCategory = "3"
              END
          POST-ACCUM @@calc += (month(s.creationDate), 
                                s.@isComment,
	                        s.@lengthCategory 
	                        -> 1, s.length);

  FOREACH c IN @@calc DO
    @@result += MessageInfo(c.Mon, 
	                    c.isComment, 
                            c.lengthCategory, 
                            c.messageCount, 
                            c.sumMessageLength/c.messageCount, 
                            c.sumMessageLength);
  END;
  PRINT @@result;
}
