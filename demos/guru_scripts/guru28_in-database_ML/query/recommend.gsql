CREATE QUERY recommend(VERTEX<USER> source) FOR GRAPH Recommender {
	SumAccum<DOUBLE> @MB_prediction;
	SumAccum<DOUBLE> @CB_prediction;
	MaxAccum<DOUBLE> @rating_label;
	src = {source};
	Rated_Movies = SELECT s FROM src:s -(rate:e)->MOVIE:t
	               ACCUM
	                 t.@rating_label += e.rating+t.avg_rating;

  MOVIEs = {MOVIE.*};
	MOVIEs = SELECT s FROM MOVIEs:s
	        POST-ACCUM
	          s.@MB_prediction += dotProduct_List_List(source.theta,s.x)+s.avg_rating
	        ORDER BY s.@MB_prediction DESC
	        LIMIT 10;
	PRINT "Recommendation (based on model)";
	PRINT MOVIEs[MOVIEs.name, MOVIEs.@MB_prediction]; # [MOVIEs.name, MOVIEs.@MB_prediction, MOVIEs.@rating_label, MOVIEs.avg_rating]; #[MOVIEs.name, MOVIEs.@rating_prediction]
	
	Terms = SELECT t FROM src:s -(user_term:e)-> TERM:t
	          ACCUM
	            t.@CB_prediction += e.score;
	
	  MOVIEs = SELECT t FROM Terms:s -(movie_term:e)-> MOVIE:t
	           ACCUM
	             t.@CB_prediction += s.@CB_prediction*e.TFIDF
	           POST-ACCUM
	              t.@CB_prediction = t.@CB_prediction + t.avg_rating
	           ORDER BY t.@CB_prediction DESC
	           LIMIT 10;
	PRINT "Recommendation (based on content)";
	PRINT MOVIEs[MOVIEs.name, MOVIEs.@CB_prediction];
}

