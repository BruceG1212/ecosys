CREATE QUERY validation_TFIDF_sub(VERTEX<MOVIE> movie) FOR GRAPH Recommender RETURNS (MapAccum<STRING,SumAccum<DOUBLE>>){ 
#  SumAccum<DOUBLE> @rating_prediction;
	SumAccum<DOUBLE> @rating_label;
	SumAccum<DOUBLE> @score;
	SumAccum<DOUBLE> @@delta_validation;
	SumAccum<DOUBLE> @@delta_training;
	SumAccum<DOUBLE> @@delta_baseline;
 MapAccum<STRING,SumAccum<DOUBLE>> @@res;
#	SumAccum<DOUBLE> @@cnt;
	OrAccum @label;
	OrAccum @rated_by;
	src = {movie};

	
	Start = SELECT t FROM src:s -(rate:e)-> USER:t
#	        WHERE e.label == false
	        ACCUM
#	          t.@rating_prediction += dotProduct_List_List(s.theta,t.x)+t.avg_rating,
	          t.@rated_by += true,
	          t.@rating_label += e.rating,
	          IF e.label THEN
	             t.@label += true
	          END;
#	          @@delta_baseline += e.rating*e.rating;
  
		Terms = SELECT t FROM src:s -(movie_term:e)-> TERM:t
	          ACCUM
	            t.@score += e.TFIDF;
	
	  Users = SELECT t FROM Terms:s -(user_term:e)-> USER:t
	          WHERE t.@rated_by
	           ACCUM
	             t.@score += s.@score*e.score
	           POST-ACCUM
	             IF t.@score+movie.avg_rating > 5 THEN
	                t.@score = 5-movie.avg_rating
	             ELSE 
	                IF t.@score+movie.avg_rating < 0 THEN
	                  t.@score = 0-movie.avg_rating
	                END
	             END,
	             @@delta_baseline += t.@rating_label*t.@rating_label,
	             IF t.@label == false THEN
	                @@delta_validation += (t.@score-t.@rating_label)*(t.@score-t.@rating_label)
	             ELSE
	                @@delta_training += (t.@score-t.@rating_label)*(t.@score-t.@rating_label)
	             END;
	   
	  	Start = SELECT t FROM src:s -(rate:e)-> USER:t
#	        WHERE e.label == false
	        ACCUM
#	          t.@rating_prediction += dotProduct_List_List(s.theta,t.x)+t.avg_rating,
	          e.TFIDF_prediction = t.@score
	          ;
#	@@cnt = Users.size();
#	PRINT sqrt(@@delta_validation/@@cnt);
#	PRINT sqrt(@@delta_baseline/@@cnt);
#	PRINT Users[Users.@score, Users.@rating_label];
	  @@res += ("validation"->@@delta_validation);
	  @@res += ("training"->@@delta_training);
#	  PRINT @@res;
#	  PRINT Users;
    RETURN @@res; 
}

